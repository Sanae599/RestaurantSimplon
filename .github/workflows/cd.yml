name: CD Pipeline   # Nom affiché dans GitHub Actions

on:
  push:
    branches: [ "branch_sanae"]
    tags:
      - 'v*'   # Déclenche le workflow uniquement lorsqu'un tag correspondant à une version est poussé

jobs:
  docker:
    runs-on: ubuntu-latest 

    steps:
      # Récupération du code source
      - name: Checkout code
        uses: actions/checkout@v4   

      # Configuration de Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2   # Permet de construire des images multi-plateformes et optimisées

      # Connexion à DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}  # Nom d'utilisateur DockerHub stocké dans les secrets GitHub
          password: ${{ secrets.DOCKERHUB_TOKEN }}     # Token DockerHub stocké dans les secrets GitHub

      # Extraction de la version à partir du tag
      - name: Extract version from tag
        id: vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        # GITHUB_REF contient la référence du tag (ex: refs/tags/v1.0.0)
        # Cette commande supprime "refs/tags/" pour ne garder que la version "v1.0.0"
        # La version est ensuite stockée dans la variable d'environnement VERSION

      # Construction et push de l'image Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .     # Contexte de construction (le répertoire actuel)
          push: true     # Pousse l'image sur DockerHub après la construction
          tags: |        # Tags attribués à l'image
            ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-sqlmodel:latest 
            ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-sqlmodel:${{ env.VERSION }} 


